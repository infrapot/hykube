/*
Copyright 2024 by infrapot

This program is a free software product. You can redistribute it and/or
modify it under the terms of the GNU Affero General Public License (AGPL)
version 3 as published by the Free Software Foundation.

For details, see the GNU AGPL at: http://www.gnu.org/licenses/agpl-3.0.html
*/
// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "hykube.io/apiserver/pkg/apis/hykube/v1alpha1"
)

// ProviderSpecApplyConfiguration represents a declarative configuration of the ProviderSpec type for use
// with apply.
type ProviderSpecApplyConfiguration struct {
	Reference     *string                 `json:"reference,omitempty"`
	ReferenceType *v1alpha1.ReferenceType `json:"referenceType,omitempty"`
}

// ProviderSpecApplyConfiguration constructs a declarative configuration of the ProviderSpec type for use with
// apply.
func ProviderSpec() *ProviderSpecApplyConfiguration {
	return &ProviderSpecApplyConfiguration{}
}

// WithReference sets the Reference field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Reference field is set to the value of the last call.
func (b *ProviderSpecApplyConfiguration) WithReference(value string) *ProviderSpecApplyConfiguration {
	b.Reference = &value
	return b
}

// WithReferenceType sets the ReferenceType field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ReferenceType field is set to the value of the last call.
func (b *ProviderSpecApplyConfiguration) WithReferenceType(value v1alpha1.ReferenceType) *ProviderSpecApplyConfiguration {
	b.ReferenceType = &value
	return b
}
